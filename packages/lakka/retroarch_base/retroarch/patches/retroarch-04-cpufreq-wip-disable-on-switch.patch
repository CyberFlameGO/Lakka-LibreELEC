diff --git a/configuration.h b/configuration.h
index 898f2af8f2..88029ca760 100644
--- a/configuration.h
+++ b/configuration.h
@@ -335,6 +335,7 @@ typedef struct settings
       unsigned cpu_min_freq;
       unsigned cpu_max_freq;
 #endif
+
    } uints;
 
    struct
diff --git a/menu/cbs/menu_cbs_left.c b/menu/cbs/menu_cbs_left.c
index 08a92fdce1..47e33a4ff0 100644
--- a/menu/cbs/menu_cbs_left.c
+++ b/menu/cbs/menu_cbs_left.c
@@ -678,6 +678,7 @@ static int manual_content_scan_core_name_left(unsigned type, const char *label,
    return 0;
 }
 
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
 static int cpu_policy_mode_change(unsigned type, const char *label,
       bool wraparound)
@@ -792,6 +793,7 @@ static int cpu_policy_freq_tweak(unsigned type, const char *label,
    return 0;
 }
 #endif
+#endif
 
 static int core_setting_left(unsigned type, const char *label,
       bool wraparound)
diff --git a/menu/menu_driver.c b/menu/menu_driver.c
index 87166738e6..950ac4cbe8 100644
--- a/menu/menu_driver.c
+++ b/menu/menu_driver.c
@@ -6704,9 +6704,11 @@ void menu_driver_toggle(
 
    if (on) 
    {
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
       set_cpu_scaling_signal(CPUSCALING_EVENT_FOCUS_MENU);
 #endif
+#endif
 #ifdef HAVE_OVERLAY
       /* If an overlay was displayed before the toggle
        * and overlays are disabled in menu, need to
@@ -6725,9 +6727,11 @@ void menu_driver_toggle(
    }
    else
    {
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
       set_cpu_scaling_signal(CPUSCALING_EVENT_FOCUS_CORE);
 #endif
+#endif
 #ifdef HAVE_OVERLAY
       /* Inhibits pointer 'select' and 'cancel' actions
        * (until the next time 'select'/'cancel' are released) */
diff --git a/retroarch.c b/retroarch.c
index e053ae0930..a24e565a7c 100644
--- a/retroarch.c
+++ b/retroarch.c
@@ -3605,14 +3605,18 @@ static void runloop_pause_checks(void)
       command_event(CMD_EVENT_DISCORD_UPDATE, &userdata);
 #endif
 
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
       set_cpu_scaling_signal(CPUSCALING_EVENT_FOCUS_MENU);
+#endif
 #endif
    }
    else
    {
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
       set_cpu_scaling_signal(CPUSCALING_EVENT_FOCUS_CORE);
+#endif
 #endif
    }
 
@@ -11318,9 +11322,11 @@ void drivers_init(
    if (flags & DRIVER_MIDI_MASK)
       midi_driver_init(settings);
 
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
    cpu_scaling_driver_init();
 #endif
+#endif
 }
 
 void driver_uninit(int flags)
@@ -11404,9 +11410,11 @@ void driver_uninit(int flags)
    if (flags & DRIVER_MIDI_MASK)
       midi_driver_free();
 
+#ifndef HAVE_LAKKA_SWITCH
 #ifdef HAVE_LAKKA
    cpu_scaling_driver_free();
 #endif
+#endif
 }
 
 static void retroarch_deinit_drivers(struct retro_callbacks *cbs)
